/*
 * Copyright (C) 2017 LibreCCM Foundation.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package com.arsdigita.cms.contenttypes.ui.mparticle;

import com.arsdigita.bebop.ActionLink;
import com.arsdigita.bebop.ColumnPanel;
import com.arsdigita.bebop.Container;
import com.arsdigita.bebop.DefaultSingleSelectionModel;
import com.arsdigita.bebop.Label;
import com.arsdigita.bebop.PageState;
import com.arsdigita.bebop.SingleSelectionModel;
import com.arsdigita.bebop.parameters.LongParameter;
import com.arsdigita.bebop.parameters.StringParameter;
import com.arsdigita.cms.ItemSelectionModel;
import com.arsdigita.cms.contenttypes.ui.ResettableContainer;
import com.arsdigita.cms.ui.GlobalNavigation;
import com.arsdigita.cms.ui.authoring.AuthoringKitWizard;
import com.arsdigita.globalization.GlobalizedMessage;

import org.libreccm.cdi.utils.CdiUtil;
import org.librecms.CmsConstants;
import org.librecms.contenttypes.MultiPartArticle;
import org.librecms.contenttypes.MultiPartArticleSection;
import org.librecms.contenttypes.MultiPartArticleSectionManager;

/**
 * Authoring kit step to manage the sections of a MultiPartArticle. Process is
 * implemented with three main components that manipulate the currently selected
 * MultiPartArticle and sections. The visibility of these components is managed
 * by this class.
 *
 * Note: This class was originally called {@code MultiPartArticleViewSections}.
 * Starting with version 7.0.0 all authoring step classes should end with
 * {@code Step} to make them easily identifiable.
 *
 * @author <a href="mailto:dturner@arsdigita.com">Dave Turner</a>
 * * @author <a href="mailto:jens.pelzetter@googlemail.com">Jens Pelzetter</a>
 */
public class MultiPartArticleSectionsStep extends ResettableContainer {

    /* id keys for each editing panel */
    public static final String SECTION_TABLE = "sec_tbl";
    public static final String SECTION_EDIT = "sec_edt";
    public static final String SECTION_PREVIEW = "sec_prv";
    public static final String SECTION_DELETE = "sec_del";

    public static final String DATA_TABLE = "dataTable";
    public static final String ACTION_LINK = "actionLink";

    private final AuthoringKitWizard authoringKitWizard;
    private final ItemSelectionModel selectedArticleModel;
    private final StringParameter selectedLanguageParam;
    private SectionSelectionModel<MultiPartArticleSection> selectedSectionModel;
    private SectionSelectionModel<MultiPartArticleSection> moveSectionModel;
    private LongParameter moveSectionParam;

    private SectionTable sectionTable;
    private SectionEditForm sectionEditForm;
    private SectionPreviewPanel sectionPreviewPanel;
    private SectionDeleteForm sectionDeleteForm;

    private ActionLink beginLink;
    private Label moveSectionLabel;

    private final String typeIdStr;

    public MultiPartArticleSectionsStep(
        final ItemSelectionModel selectedArticleModel,
        final AuthoringKitWizard authoringKitWizard,
        final StringParameter selectedLanguageParam) {

        super();
        this.selectedArticleModel = selectedArticleModel;
        this.authoringKitWizard = authoringKitWizard;
        this.selectedLanguageParam = selectedLanguageParam;

        typeIdStr = authoringKitWizard
            .getContentType()
            .getContentItemClass()
            .getName();

        addWidgets();
    }

    private void addWidgets() {
        // create the components and set default visibility
        add(buildSectionTable(), true);
        add(buildSectionEdit(), false);
        add(buildSectionDelete(), false);
    }

    /**
     * Builds a {@link Container} to hold a {@link SectionTable} and a link to
     * add a new {@link MultiPartArticleSection}.
     *
     * @return A {@link Container} for the table of sections.
     */
    protected Container buildSectionTable() {

        final ColumnPanel panel = new ColumnPanel(1);
        panel.setKey(SECTION_TABLE + typeIdStr);
        panel.setBorderColor("#FFFFFF");
        panel.setPadColor("#FFFFFF");

        moveSectionParam = new LongParameter("moveSection");
        moveSectionModel = new SectionSelectionModel<>(moveSectionParam);

        sectionTable = new SectionTable(selectedArticleModel,
                                        moveSectionModel);
        sectionTable.setClassAttr(DATA_TABLE);

        // selected section is based on the selection in the SectionTable
        selectedSectionModel = new SectionSelectionModel<>(sectionTable
            .getRowSelectionModel());

        sectionTable.setSectionModel(selectedSectionModel);

        final Label emptyView = new Label(new GlobalizedMessage(
            "cms.contenttypes.ui.mparticle.no_sections_yet",
            CmsConstants.CMS_BUNDLE));
        sectionTable.setEmptyView(this);

        moveSectionLabel = new Label(new GlobalizedMessage(
            "cms.contenttypes.ui.mparticle.section.title",
            CmsConstants.CMS_BUNDLE));
        panel.add(moveSectionLabel, ColumnPanel.FULL_WIDTH | ColumnPanel.LEFT);

        beginLink = new ActionLink(new GlobalizedMessage(
            "cms.contenttypes.ui.mparticle.move_to_beginning",
            CmsConstants.CMS_BUNDLE));
        panel.add(beginLink);

        beginLink.addActionListener(event -> {
            final PageState state = event.getPageState();
            final MultiPartArticle article
                                   = (MultiPartArticle) selectedArticleModel
                    .getSelectedObject(state);
            final MultiPartArticleSection section = moveSectionModel
            .getSelectedSection(state);
            
            final MultiPartArticleSectionStepController controller = CdiUtil
            .createCdiUtil()
            .findBean(MultiPartArticleSectionStepController.class);
            
            controller.moveToFirst(article, section);
        });

        
    }
